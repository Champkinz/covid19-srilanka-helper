{"version":3,"sources":["sdk.ts","component/atoms/typography.ts","component/pages/stats.tsx","component/pages/food.tsx","component/pages/activities.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["SDK","basepath","axios","get","this","result","P","styled","p","props","fontSize","css","center","fontWeight","color","white","bold","Stats","className","data","update_date_time","style","position","alt","src","width","height","top","left","local_total_cases","local_new_cases","local_deaths","local_new_deaths","local_recovered","local_total_number_of_individuals_in_hospitals","local_active_cases","global_total_cases","Food","Activities","App","useState","setData","tab","setTab","getInitData","a","res","console","log","useEffect","paddingTop","onClick","selectTab","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.e15bb0fb.chunk.js","sourcesContent":["import axios, { AxiosResponse } from \"axios\";\r\n\r\nexport class SDK {\r\n  basepath = \"https://www.hpb.health.gov.lk/api/get-current-statistical\";\r\n\r\n  async getInitData() {\r\n    const result: AxiosResponse<any> = await axios.get(this.basepath);\r\n    return result;\r\n  }\r\n}\r\n","import styled, { css } from \"styled-components\";\r\n\r\nexport const P = styled.p<PProps>`\r\n\r\n\r\n\r\n  ${(props) =>\r\n    props.fontSize &&\r\n    css`\r\n      font-size: ${props.fontSize}px;\r\n    `}\r\n  ${(props) =>\r\n    props.center &&\r\n    css`\r\n      text-align: center;\r\n    `}\r\n  ${(props) =>\r\n    props.fontWeight &&\r\n    css`\r\n      font-weight: ${props.fontWeight};\r\n    `}\r\n  ${(props) =>\r\n    props.color &&\r\n    css`\r\n      color: ${props.color};\r\n    `}\r\n  ${(props) =>\r\n    props.white &&\r\n    css`\r\n      color: #ffffff;\r\n    `}\r\n  ${(props) =>\r\n    props.bold &&\r\n    css`\r\n      font-weight: bold;\r\n    `}\r\n`;\r\n\r\nexport interface PProps {\r\n  fontSize?: number;\r\n  fontWeight?: number | string;\r\n  color?: string;\r\n  white?: boolean;\r\n  bold?: boolean;\r\n  center?: boolean;\r\n}\r\n","import React from \"react\";\r\nimport { P } from \"../atoms/typography\";\r\n\r\nfunction Stats(props: any) {\r\n  return (\r\n    <>\r\n      <div className=\"px-6\">\r\n        <P fontWeight={400}>\r\n          Information Gathered Date and Time :{\" \"}\r\n          {props.data.data.data.update_date_time}\r\n        </P>\r\n      </div>\r\n      <div className=\"flex flex-wrap justify-around p-5\">\r\n        <div className=\"w-full  sm:w-1/2 md:w-1/4 lg:w-1/4 xl:w-1/4  p-4\">\r\n          <div\r\n            className=\"flex flex-col h-full justify-center items-center rounded overflow-hidden shadow-cus bg-white py-4\"\r\n            style={{ position: \"relative\" }}\r\n          >\r\n            <img\r\n              alt=\"\"\r\n              src=\"https://static.thenounproject.com/png/2522082-200.png\"\r\n              style={{\r\n                width: 40,\r\n                height: \"auto\",\r\n                position: \"absolute\",\r\n                top: 5,\r\n                left: 5,\r\n              }}\r\n            />\r\n            <P fontSize={20}>Total Cases</P>\r\n            <P bold fontSize={30} color=\"#45aaf2\">\r\n              {props.data.data.data.local_total_cases}\r\n            </P>\r\n          </div>\r\n        </div>\r\n        <div className=\"w-full  sm:w-1/2 md:w-1/4 lg:w-1/4 xl:w-1/4  p-4\">\r\n          <div className=\"flex flex-col h-full justify-center items-center rounded overflow-hidden shadow-cus bg-white py-4\">\r\n            <P fontSize={20}>Total New Cases</P>\r\n            <P bold fontSize={30} color=\"#45aaf2\">\r\n              {props.data.data.data.local_new_cases}\r\n            </P>\r\n          </div>\r\n        </div>\r\n        <div className=\"w-full  sm:w-1/2 md:w-1/4 lg:w-1/4 xl:w-1/4  p-4\">\r\n          <div className=\"flex flex-col h-full justify-center items-center rounded overflow-hidden shadow-cus bg-white py-4\">\r\n            <P fontSize={20}>Total Deaths</P>\r\n            <P bold fontSize={30} color=\"#45aaf2\">\r\n              {props.data.data.data.local_deaths}\r\n            </P>\r\n          </div>\r\n        </div>\r\n        <div className=\"w-full  sm:w-1/2 md:w-1/4 lg:w-1/4 xl:w-1/4  p-4\">\r\n          <div className=\"flex flex-col h-full justify-center items-center rounded overflow-hidden shadow-cus bg-white py-4\">\r\n            <P fontSize={20}>Total New Deaths</P>\r\n            <P bold fontSize={30} color=\"#45aaf2\">\r\n              {props.data.data.data.local_new_deaths}\r\n            </P>\r\n          </div>\r\n        </div>\r\n        <div className=\"w-full  sm:w-1/2 md:w-1/4 lg:w-1/4 xl:w-1/4  p-4\">\r\n          <div className=\"flex flex-col h-full justify-center items-center rounded overflow-hidden shadow-cus bg-white bg-white py-4\">\r\n            <P fontSize={20}>Total Recovered</P>\r\n            <P bold fontSize={30} color=\"#45aaf2\">\r\n              {props.data.data.data.local_recovered}\r\n            </P>\r\n          </div>\r\n        </div>\r\n        <div className=\"w-full  sm:w-1/2 md:w-1/4 lg:w-1/4 xl:w-1/4  p-4\">\r\n          <div className=\"flex flex-col h-full justify-center items-center rounded overflow-hidden shadow-cus bg-white py-4\">\r\n            <P fontSize={20} center>\r\n              Suspected and in Hospital\r\n            </P>\r\n            <P bold fontSize={30} color=\"#45aaf2\">\r\n              {\r\n                props.data.data.data\r\n                  .local_total_number_of_individuals_in_hospitals\r\n              }\r\n            </P>\r\n          </div>\r\n        </div>\r\n        <div className=\"w-full  sm:w-1/2 md:w-1/4 lg:w-1/4 xl:w-1/4  p-4\">\r\n          <div className=\"flex flex-col h-full justify-center items-center rounded overflow-hidden shadow-cus bg-white py-4\">\r\n            <P fontSize={20}>Total Active Cases</P>\r\n            <P bold fontSize={30} color=\"#45aaf2\">\r\n              {props.data.data.data.local_active_cases}\r\n            </P>\r\n          </div>\r\n        </div>\r\n        <div className=\"w-full  sm:w-1/2 md:w-1/4 lg:w-1/4 xl:w-1/4  p-4\">\r\n          <div\r\n            className=\"flex flex-col h-full justify-center items-center rounded overflow-hidden shadow-cus bg-white py-4\"\r\n            style={{ position: \"relative\" }}\r\n          >\r\n            <img\r\n              alt=\"\"\r\n              src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/c/c4/Globe_icon.svg/1200px-Globe_icon.svg.png\"\r\n              style={{\r\n                width: 25,\r\n                height: \"auto\",\r\n                position: \"absolute\",\r\n                top: 10,\r\n                left: 10,\r\n              }}\r\n            />\r\n            <P fontSize={20}>Global Total Cases</P>\r\n            <P bold fontSize={30} color=\"#45aaf2\">\r\n              {props.data.data.data.global_total_cases}\r\n            </P>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Stats;\r\n","import React from \"react\";\r\n\r\nfunction Food() {\r\n  return <p>Food</p>;\r\n}\r\n\r\nexport default Food;\r\n","import React from \"react\";\r\n\r\nfunction Activities() {\r\n  return <p>Activities</p>;\r\n}\r\n\r\nexport default Activities;\r\n","import React, { useEffect, useState, useMemo } from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport { SDK } from \"./sdk\";\nimport { P } from \"./component/atoms/typography\";\nimport Stats from \"./component/pages/stats\";\nimport Food from \"./component/pages/food\";\nimport Activities from \"./component/pages/activities\";\n\nfunction App() {\n  const [data, setData] = useState();\n  const [tab, setTab] = useState(1);\n  const getInitData = async () => {\n    const res = await new SDK().getInitData();\n    console.log(res);\n    setData(res);\n  };\n  const selectTab = () => {\n    switch (tab) {\n      case 1:\n        return <Stats data={data} />;\n      case 2:\n        return <Food />;\n      case 3:\n        return <Activities />;\n      default:\n        return <Stats data={data} />;\n    }\n  };\n\n  useEffect(() => {\n    (async function runDataInit() {\n      await getInitData();\n    })();\n  }, []);\n\n  if (!data) {\n    return null;\n  }\n  return (\n    <div\n      className=\"flex flex-1 flex-col min-h-screen\"\n      style={{ paddingTop: 100 }}\n    >\n      <div className=\"flex w-full flex-row justify-start head-title bg-white\">\n        <div className=\"p-4 flex flex-row\">\n          <img\n            alt=\"\"\n            src=\"https://static.thenounproject.com/png/2522082-200.png\"\n            style={{ width: 40, height: \"auto\" }}\n          />\n          <P fontSize={26} fontWeight={500} color=\"#e74c3c\">\n            Quarantine Starter Pack\n          </P>\n        </div>\n      </div>\n      <div className=\"flex w-full flex-row justify-center\">\n        <button\n          onClick={() => setTab(1)}\n          className={`bg-white hover:bg-gray-100 font-semibold py-2 px-4 border border-gray-400 rounded shadow rounded-full ${\n            tab === 1 ? \"bg-red-400 text-white\" : \"text-gray-800\"\n          }`}\n        >\n          Stats\n        </button>\n        <button\n          onClick={() => setTab(2)}\n          className={`bg-white hover:bg-gray-100 font-semibold py-2 px-4 border border-gray-400 rounded shadow ml-4 rounded-full ${\n            tab === 2 ? \"bg-red-400 text-white\" : \"text-gray-800\"\n          }`}\n        >\n          Food\n        </button>\n        <button\n          onClick={() => setTab(3)}\n          className={`bg-white hover:bg-gray-100 font-semibold py-2 px-4 border border-gray-400 rounded shadow ml-4 rounded-full ${\n            tab === 3 ? \"bg-red-400 text-white\" : \"text-gray-800\"\n          }`}\n        >\n          Activities\n        </button>\n      </div>\n      {selectTab()}\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport \"./tailwind.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}